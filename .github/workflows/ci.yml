name: CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    build:
        name: Build and Test
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest]
                go: ["1.23.x", "1.24.x"]

        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: ${{ matrix.go }}
                  cache: true

            - name: Verify dependencies
              run: go mod verify

            - name: Build
              run: go build -v ./...

            - name: Run tests with race detector
              run: go test -v -race ./...

    lint:
        name: Code Quality
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: "1.24.x"
                  cache: true

            - name: Check formatting
              run: |
                  if [ -n "$(gofmt -l .)" ]; then
                    echo "The following files are not formatted correctly:"
                    gofmt -l .
                    exit 1
                  fi

            - name: Run go vet
              run: go vet ./...

            - name: Run golangci-lint
              uses: golangci/golangci-lint-action@v4
              with:
                  version: latest
                  args: --timeout=5m

            - name: Verify go.mod is tidy
              run: |
                  go mod tidy
                  git diff --exit-code go.mod go.sum

    security:
        name: Security Scan
        runs-on: ubuntu-latest
        permissions:
            security-events: write
            actions: read
            contents: read

        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: "1.24.x"
                  cache: true

            - name: Run Gosec Security Scanner
              uses: securego/gosec@master
              with:
                  args: ./...

            - name: Run govulncheck
              uses: golang/govulncheck-action@v1
              with:
                  go-version-input: "1.24.x"
                  check-latest: true

    codeql:
        name: CodeQL Analysis
        runs-on: ubuntu-latest
        permissions:
            security-events: write
            actions: read
            contents: read
        # Make CodeQL optional until it's enabled in repository settings

        steps:
            - uses: actions/checkout@v4

            - name: Initialize CodeQL
              uses: github/codeql-action/init@v3
              with:
                  languages: go

            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@v3
